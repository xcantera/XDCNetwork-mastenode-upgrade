
import { expect } from "chai";import { ethers } from "hardhat";import { setup } from "./00_fixture";
describe("T12 unvote excess",()=>{it("fails when amount > stake",async()=>{const {kyc, kycVerifier, validator, users}=await setup();const [owner,voter]=users;await kyc.connect(kycVerifier).mint(await owner.getAddress(),"x");await kyc.connect(kycVerifier).mint(await voter.getAddress(),"x");const stake=ethers.utils.parseEther("10000000");await validator.connect(owner).propose(await owner.getAddress(),{value:stake});const amt=ethers.utils.parseEther("200000");await validator.connect(voter).vote(await owner.getAddress(),{value:amt});await expect(validator.connect(voter).unvote(await owner.getAddress(), amt.mul(2))).to.be.revertedWith("Validator: invalid amount");});});
