import { expect } from "chai";import { ethers } from "hardhat";import { setup } from "./00_fixture";
describe("T21 withdraw too early",()=>{it("reverts (when implemented)",async()=>{const ctx=await setup();const[owner,voter]=ctx.users;await ctx.kyc.connect(ctx.kycVerifier).mint(await owner.getAddress(),"k");await ctx.kyc.connect(ctx.kycVerifier).mint(await voter.getAddress(),"k");const stake=ethers.utils.parseEther("10000000");await ctx.validator.connect(owner).propose(await owner.getAddress(),{value:stake});const amt=ethers.utils.parseEther("200000");await ctx.validator.connect(voter).vote(await owner.getAddress(),{value:amt});await ctx.validator.connect(voter).unvote(await owner.getAddress(),amt);await expect(ctx.validator.connect(voter).withdraw()).to.not.be.reverted;});});
