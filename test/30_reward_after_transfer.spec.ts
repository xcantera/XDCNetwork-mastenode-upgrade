import { expect } from "chai";import { ethers } from "hardhat";import { setup } from "./00_fixture";
describe("T30 reward after transfer",()=>{it("claimable by new owner",async()=>{const ctx=await setup();const [owner,buyer]=ctx.users;await ctx.kyc.connect(ctx.kycVerifier).mint(await owner.getAddress(),"k");await ctx.kyc.connect(ctx.kycVerifier).mint(await buyer.getAddress(),"k");const stake = ethers.utils.parseEther("10000000");await ctx.validator.connect(owner).propose(await owner.getAddress(),{value:stake});const reward=ethers.utils.parseEther("10");await ctx.validator.connect(ctx.admin).allocateEpochReward(await owner.getAddress(),reward,{value:reward});await ctx.validator.connect(owner).transferOwnership(await owner.getAddress(), await buyer.getAddress());await ctx.vault.connect(buyer).claimRewards();expect(await ctx.vault.pending(await buyer.getAddress())).to.equal(0);});});
